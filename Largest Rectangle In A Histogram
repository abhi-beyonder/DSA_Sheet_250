class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        
        int n = heights.size();
        vector<int>left(n,0);
        vector<int>right(n,0);
        stack<int>s;
        
        
        
        for(int i=0;i<n;i++){
            while(!s.empty()  && heights[i] <= heights[s.top()]){
                s.pop();
            }
            if(s.empty()){
                left[i] = -1;
            }else{
                left[i] = s.top();
            }
            s.push(i);
        }
        
        
    
        stack<int>s1;
        for(int i = n-1;i>=0;i--){
            while(!s1.empty()  && heights[i] <= heights[s1.top()]){
                s1.pop();
            }
            if(s1.empty()){
                right[i] = n;
            }else{
                right[i] = s1.top();
            }
            s1.push(i);
        }
        
        
        int ans=0;
        for(int i=0;i<n;i++){
            int x = heights[i]*(right[i]-left[i]-1);
            ans=max(ans,x);
        }
        return ans;
        
    }
};
