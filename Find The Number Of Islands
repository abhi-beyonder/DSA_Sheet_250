void DFS(vector<vector<char>>& grid, int i, int j) {
        int const n = grid.size(), m=grid[0].size();
        if(i<0 || i>=n || j<0 || j>=m)
            return;
        if(grid[i][j]=='1') {
            grid[i][j]='x';
            DFS(grid, i-1, j-1);
            DFS(grid, i-1, j  );
            DFS(grid, i-1, j+1);
            DFS(grid, i  , j-1);
            DFS(grid, i  , j+1);
            DFS(grid, i+1, j-1);
            DFS(grid, i+1, j  );
            DFS(grid, i+1, j+1);
        }
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int const n = grid.size(), m=grid[0].size();
        int res = 0;
        for(int i=0; i<n; i++) {
            for(int j=0; j<m; j++) {
                if(grid[i][j]=='1') {
                    res++;
                    DFS(grid, i, j);
                }
            }
        }
        return res;
    }
